@using Buses.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "";
}

<head>
    @*<title>Login V3</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">*@
    <link rel="icon" type="image/png" href="~/Login/images/icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/fonts/iconic/css/material-design-iconic-font.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/animate/animate.css">
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/css-hamburgers/hamburgers.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/animsition/css/animsition.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/select2/select2.min.css">
    <link rel="stylesheet" type="text/css" href="~/Login/vendor/daterangepicker/daterangepicker.css">
    <link rel="stylesheet" type="text/css" href="~/Login/css/util.css">
    <link rel="stylesheet" type="text/css" href="~/Login/css/main.css">
</head>
<body>
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="limiter">
            <div class="container-login100" style="background-image: url('../Login/images/bg-01.jpg');">
                <div class="wrap-login100">
                    <form class="login100-form validate-form">
                        <span class="login100-form-logo">
                            <i class="zmdi zmdi-landscape"></i>
                        </span>

                        <span class="login100-form-title p-b-34 p-t-27">
                            Log in
                        </span>

                        <div class="wrap-input100 validate-input" data-validate="Enter username">
                            @*<input class="input100" type="text" name="username" placeholder="Username">*@
                            @Html.TextBoxFor(m => m.Email, new { @class = "input100", @placeholder = "Username" })

                            <span class="focus-input100" data-placeholder="&#xf207;"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        <div class="wrap-input100 validate-input" data-validate="Enter password">
                            @*<input class="input100" type="password" name="pass" placeholder="Password">*@
                            @Html.PasswordFor(m => m.Password, new { @class = "input100", @placeholder = "Password" })

                            <span class="focus-input100" data-placeholder="&#xf191;"></span>
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        <div class="contact100-form-checkbox" style="display:inline-block; min-width:98%;">
                            @*<input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">*@
                            <div class="row" style="min-width:100%;">
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "col col-lg-2" })
                                <label for="RememberMe" class="col col-lg-10" style="color:white;">
                                    Remember me
                                </label>
                            </div>

                        </div>

                        <div class="container-login100-form-btn">
                            @*<button class="login100-form-btn">
                                    Login
                                </button>*@
                            <input type="submit" value="Log in" class="login100-form-btn" />
                        </div>
                        <div class="text-center p-t-90">
                            <a class="txt1" href="#">
                                Forgot Password?
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <div id="dropDownSelect1"></div>
    }


    <script src="~/Login/vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="~/Login/vendor/animsition/js/animsition.min.js"></script>
    <script src="~/Login/vendor/bootstrap/js/popper.js"></script>
    <script src="~/Login/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Login/vendor/select2/select2.min.js"></script>
    <script src="~/Login/vendor/daterangepicker/moment.min.js"></script>
    <script src="~/Login/vendor/daterangepicker/daterangepicker.js"></script>
    <script src="~/Login/vendor/countdowntime/countdowntime.js"></script>
    <script src="~/Login/js/main.js"></script>

</body>






















@*<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                 Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}